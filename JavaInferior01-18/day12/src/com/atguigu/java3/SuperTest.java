package com.atguigu.java3;
/*
 * super关键字的使用
 * 1.super理解为：父类的
 * 2.super可以用来调用：属性、方法、构造器
 * 
 * 3.super的使用：调用属性和方法
 * 		eg: 类中有一个方法或者复写了A 其父类也有个方法A像调用父类的A而不是本身的方法就要用super
 *   3.1 我们可以在子类的方法或构造器中。通过使用"super.属性"或"super.方法"的方式，显式的调用
 *   父类中声明的属性或方法。但是，通常情况下，我们习惯省略"super."
 *
 * 	 System.out.println(属性) 会先找自己本类有没有该属性，没有的话再找父类有没有，
 * 	 ★★★★★★★★★★父类有的话就把父类的属性当自己的属性用
 *   3.2 特殊情况：当子类和父类中定义了同名的属性时，我们要想在子类中调用父类中声明的属性，则必须显式的
 *   ★★★★★使用"super.属性"的方式，表明调用的是父类中声明的属性。  属性不同于方法会复写，同命属性会一起出现在内存中
 * System.out.println("id = " + this.id);  System.out.println("id = " + super.id);
 *   3.3 特殊情况：当子类重写了父类中的方法以后，我们想在子类的方法中调用父类中被重写的方法时，则必须显式的
 *   使用"super.方法"的方式，表明调用的是父类中被重写的方法。
 * ★★★★★调用一个对象的方法时候，先看看这个所在类有没有该方法，没有的话用的是其父类的方法，
 * ★★★★★父和子类有相同名字的方法： 如果复写了方法，调用的是自己的方法。想调用父类的方法，必须super.方法
 *
 *
 * 4.super调用构造器
 * 	 4.1  我们可以在子类的构造器中显式的使用"super(形参列表)"的方式，调用父类中声明的指定的构造器
 *   4.2 "super(形参列表)"的使用，必须声明在子类构造器的首行！
 *   4.3 我们在类的构造器中，针对于"this(形参列表)"或"super(形参列表)"只能二选一，不能同时出现
 * 	 因为this(形参列表)表示继承当前类本身的之前的构造器
 *  ★★★★★所有的类的构造器里都会继承其父类的构造器，只不过是显式声明还是隐式声明
 *  ★★★★★ 4.4 在构造器的首行，没有显式的声明"this(形参列表)"或"super(形参列表)"，则默认调用的是父类中空参的构造器：super()
 * ★★★★★如果父类没有无参构造函数就会报错
 * 	★★★★★如何判别继承哪一个构造器就看它形参列表
 *   4.5 在类的多个构造器中，至少有一个类的构造器中使用了"super(形参列表)"，调用父类中的构造器
 */
public class SuperTest {
	public static void main(String[] args) {
		
		Student s = new Student();
		s.show();
		
		System.out.println();
		
		s.study();
		
		Student s1 = new Student("Tom", 21, "IT");
		s1.show();
		
		System.out.println("************");
		Student s2 = new Student();
		
	}
}
